// Frontend
useEffect(() => {
  socketService.on(SOCKET_EVENT_ORDER_ADDED, (order) => {
    showSuccessMsg(`New reservation at ${order.stay.name}!`)
  })
  return () => {
    socketService.off(SOCKET_EVENT_ORDER_ADDED)
  }
}, [])

export async function placeOrder(order) {
  try {
    const savedOrder = await orderService.save(order)
    store.dispatch(getCmdAddOrder(savedOrder))
    return savedOrder
  } catch (err) {
    console.log('Cannot add order', err)
    throw err
  }
}

// Backend
export async function addOrder(req, res) {
  const { loggedInUser } = req
  const order = req.body

  try {
    const addedOrder = await orderService.add(order, loggedInUser)
    const hostId = addedOrder.host._id
    socketService.broadcast({ type: 'order-added', data: addedOrder, room: hostId })
    res.json(addedOrder)
  } catch (err) {
    logger.error('Failed to add order', err)
    res.status(400).send({ err: 'Failed to add order' })
  }
}